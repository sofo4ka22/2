#  Лабораторна робота №2
### навчально-методичний додаток
***
## Завдання № 1 "Навігація в Jupyter Notebook"


- Продивитись __User Interface Tour__
- Відкрити [довідник команд](https://cheatography.com/weidadeyue/cheat-sheets/jupyter-notebook/pdf_bw/)
- користуючись довідником виконати операції, які наведено в наступних рядках

## Гришко Софія
### додати знизу пустий рядок
2
# відключити в цьом рядку номерацію строк

### Додати до цього рядка зверху 2 рядка:
1. Командний рядок
2. Рядок коментарів

## Завдання №2 " Конструкції Python"
- заповнити пусті рядки вашим рішенням
- ### Змінні

Ім'я, яке використовується для позначення чогось або значення, називається **змінною**. У python можна оголошувати змінні і присвоювати йому значення наступним чином:

- x = 10             
- y = -3.1428         
- s = "Вася Пупкін"
- a = [x, y, s]
- b = False
- t = (y, "Студент")

---
_[Прочитати про типи даних](https://uk.education-wiki.com/2923901-python-data-types)_

Тип даних можна перевірити наступною інструкцією: `type(<імя змінної>)`
# виконайте присвоювання та виведіть типи даних x, y, s, b, t:
x=10
y=-3.1428
s="Вася Пупкін"
a=[x,y,s]
b=False
t=(y,"Студент")
print(type(x))
print(type(y))
print(type(s))
print(type(a))
print(type(b))
print(type(t))

<class 'int'>
<class 'float'>
<class 'str'>
<class 'list'>
<class 'bool'>
<class 'tuple'>

### Опрератори

#### арифметичні

| Позначка | Виконує |
|----|---|
| +  | Додавання |
| -  | Віднімання |
| /  | поділ |
| %  | остаток від ділення |
| *  | множення |
| //  | цілочісельне ділення |
| **  | ступінь |

# застосуйте вищенаведені оператори до `x` та `y`:
x=10
y=-3.1428
print(x + y)
print(x - y)
print(x / y)
print(x % y)
print(x * y)
print(x // y)
print(x ** y)

 6.857200000000001
 13.1428 
 -3.1818760341097114
  -2.5711999999999993 
  -31.427999999999997 
  -4.0 
  0.0007197803728026997
  
  #### порівняння
| Позначка | Результат |
|----|---|
| == | True, якщо рівні |
| !=  | True, якщо не рівні |
| < | менше |
| > | більше |
| <=  | менше чи равно |
| >=  | більше чи равно |
# застосуйте вищенаведені оператори до `x` та `y`:
x=10
y=-3.1428
print(x == y)
print(x != y)
print(x < y)
print(x > y)
print(x <= y)
print(x >= y)

False
True
False
True
False
True
### Вбудовані функції перетворення типів
1. str(<змінна чи вираз>) - перетворення в строку
2. int(<змінна чи вираз>) - перетворення в ціле
3. float(<змінна чи вираз>) - перетворення в дийсне число

[Прочитати про інші функції перетворення типів](http://nikolay.in.ua/navchaemos/python-3/612-tipi-danikh-funktsiji-peretvorennya-tipiv-operatsiji-z-chislovimi-tipami)
# застосуйте (1) функцію до змінних 'x' - 't' , (2) до `x` - 's', (3) - `x` - `y`
# (якщо будуть помилки - виправте їх самотуж)
x=10
y=-3.1428
s="Вася Пупкін"
a=[x,y,s]
b=False
t=(y,"Студент")

str(x)
str(y)
str(s)
str(a)
str(b)
str(t)
int(x)
int(y)
float(x)
float(y)
## Завдання №3 "Введення/вивід з консолі"
- __input__([символьний вираз]) - введення с консолі в _символьному форматі_ (__STDIN__) 
- __print__(<вираз>) - виведення в консоль (__STDOUT__)

Для зчитування рядка зі стандартного вводу використовується функція input (), яка зчитує рядок з клавіатури і повертає значення, яке відразу ж можна привласнити змінним:
`s = input()`

Функція `input` повертає текстовий рядок. Якщо потрібно зробити так, щоб змінні мали чисельні значення, то відразу ж після зчитування виконаємо перетворення типів за допомогою функції `int` або `float`, і запишемо нове значення:
`s1 = int(s)`

Краще об'єднати зчитування рядків і перетворення типів, якщо викликати функцію int/float для того значення, яке поверне функція input ():
`s = int(input())`
# ввести з консолі число 2.71 в змінну 'e'
е = input()
# вивести в консоль 'е' в супені 5
print(input ** 5)
#### форматування  при виведенні
у Python для позначення рядка використовуються одинарні, подвійні та потрійні лапки. Більшість використовують одинарні лапки при оголошенні одного символу. Подвійні лапки при оголошенні рядка та потрійні лапки при оголошенні абзацу / кількох рядків.

- 'A' - одиночний символ
- "Студент Вася" - рядок символів
- """ Перший рядок 
    
      Другий рядок
      
      ..."""
# Рядки можуть бути призначені змінним наприкалд `name` та `surname`, 
# які можна викликати при використанні оператора print.
# Виконайте код, який наведено нижче
name = "Вася"
surname = "Пупкін"
print (name, surname)
print("1+1", 2, sep=" -> ")
Напишіть нижче, для чого нужна '`,`' та `sep` в функції `print()`:

щоб віділити елементи коду

### форматування в функції `print()`

[Прочитати про методи форматування вивода](https://python-scripts.com/string-formatting)

# виконати код та розібратись, чому функція `print()...format` спрацювала таким чином
print("{} {} - це студент".format(name, surname))
print("Результат буде = {}".format(42 / 5 + 4))
b = True
print("{} - {} хлопець!".format(name, b))
print("{} {}".format(surname, name))

## Завдання №4 "Керування обчисленнями"
### Умовний оператор if / if-else / if-elif
`if <логічний вираз(умова)> :
  <код>`
  
`if <логічний вираз(умова)> :
  <код>
 else :
    <код>`

`if <логічний вираз(умова)> :
  <код>
 elif <логічний вираз_1(умова)> :
  <код>
 elif <логічний вираз_2(умова)> :
  <код>
... 
 [else] :
   <код>`
   x = int(input("Введи x: "))

# ----- 1 ----------
if x > 5:
    print (x)
    
# ----- 2 ----------    
if -5 < x < 5 :
    print (x)
else:
    print (x ** 2)
    
# ----- 3 ----------
if x > -5:
    print (x)
elif -5 < x < 5:
    print (x ** 2)
elif x > 5:
    print (x ** (1/2))
    
    напишіть, який __if__ спрацював при:

x = -20     ....

x = 31.5    ....

x = 4       ....
# напишить нижче код, який виводить слово 'студент', 'школяр' або 'малятко' 
# в залежності від введенного через консоль віку
if 0<x<5:
   print('-Малятко')
elif 5<x<18:
    print('-Школяр')
else:
    print('-Студент')
    
...
### Цикли
****
#### for

`for <змінна> in <перераховуємий об'єкт>
    код`
    
    
__перераховуємий об'єкт__ - це об'єкт, який складається із декількох послідовних складових (чисел, строк та ін.)

- 1, 13, -10, 321
- "Вася", "Пупкін", "студент"
- "Вася", -10.1, True

[Прочитати про функцію `range`](https://python-scripts.com/range)
# приклад цикла з 'for' та 'if'
for i in range(10):
    if i % 2 != 0:
        print (-i)
    else:
        pass
        # напишіть нижче код, який сумує числа, які діляться без остатка на 3 
# в інтервалі від 10 до 100
for i in range(10,101):
    if i % 3 == 0:
        print(i)
    else:
        pass
#### while

[прочитати про цикл while](https://pythonru.com/osnovy/cikl-while-v-python)
# запустіть цей код 
while(input("тисни тут: ") != '0'):
    print ("було введено")
    
        else:
